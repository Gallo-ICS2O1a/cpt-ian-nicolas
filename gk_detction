net_pos = PVector(298, 100)

# goal keeper variables
gk_pos = PVector(402, 175) # gk is goal keeper
gk_size = 50
gk_radius = gk_size / 2 

#ball variables
ball_pos = PVector(400, 385)
ball_size = 30
ball_radius = ball_size / 2

def setup():
    size(800, 500)
    

def draw():
    global net_pos, gk_pos, gk_size, ball_pos, ball_size, ball_radius, gk_radius
    
    

    background(255)
    #net
    fill(255)
    stroke(0)
    strokeWeight(2)
    rect(net_pos.x, net_pos.y, 204, 100)
    
    # goalkeeper
    fill(255, 0, 0)
    ellipse(gk_pos.x, gk_pos.y, gk_size, gk_size)
    
    fill(0) 
    ellipse(ball_pos.x, ball_pos.y, ball_size, ball_size)
    

    ball_to_gk_vect = PVector.sub(gk_pos, ball_pos)
    ball_to_gk_dist = ball_to_gk_vect.mag()
    
    print(ball_to_gk_dist)
    if ball_to_gk_dist <= ball_radius + gk_radius:
        print("touching")
